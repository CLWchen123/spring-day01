<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
		
		<!-- scope属性,用来指定bean的作用域.缺省值是"singleton"(单例),
		如果值为"prototype"(原型),则创建多个实例 -->
		<bean id="sb1" class="basic.ScopeBean" scope="prototype"/>
		
		<!-- init-method属性:用来指定初始化方法 
		          destroy-method属性:用来指定销毁方法
		          注:Spring容器关闭之前,会删除它所管理的bean,在删除bean之前,会调用destroy方法
		              销毁方法值针对作用域为singleton的bean-->
		<bean id="mb1" class="basic.MessageBean" init-method="init" 
		      destroy-method="destroy" scope="singleton"/>
		
		<!-- lazy-init属性:如果值为true,表示延迟加载.即容器启动之后不会立即创建该实例
		,只有等到调用时(getBean)才创建 -->
		<bean id="lb1" class="basic.LazyBean" lazy-init="true"/>
	
</beans>